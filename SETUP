#/usr/bin/env bash

# KALI SETUP SCRIPT
#  
# - Setup non-root uxer
# - Install core system updates
# - Setup dev
#
#-------------------------------------

echo 'Choose the hostname you want for this system:'
#read _HOSTNAME
#echo 'What do you want to name your main sudo user?'
#read _USER 
#echo 'Thanks. Initializing setup...'

# global pkgs
PKG_LIST=( vim git curl ack inetutils* kernel-package libssl-dev openssl vim-pathogen tshark )	

function run! {
	update_system
	install_libs
	create_user
	setup_bash
	setup_vim
	setup_keymaps
	change_hostname
	package_dotfiles
	set_user_permissions
}

function update_system {
	dialog 'Bringing the system up to date...'
	sudo apt-get update && sudo apt-get upgrade -y
	sudo apt-get dist-upgrade -y
}

function install_libs {
	dialog 'Installing pkg list...'
	sudo apt-get install -y $PKG_LIST	
}

function create_user {
	dialog 'Creating user "$_USER"...'
	mkdir -p /home/$_USER
	useradd -s /bin/bash -d /home/$_USER $_USER
	ln -s /root/Desktop /home/$_USER/Desktop
	ln -s /root/Downloads /home/$_USER/Downloads
	echo "$_USER	ALL=(ALL:ALL) ALL"
}

function set_user_permissions {
	chmod -R /home/$_USER $_USER
	chmod -R /root/Desktop $_USER
	chmod -R /root/Downloads $_USER
}

function setup_bash {
	dialog 'Setting up bash env...'
	touch /home/$_USER/.bashrc
	touch /home/$_USER/.bash_profile
	touch /home/$_USER/.bash_prompt
	touch /home/$_USER/.inputrc
	touch /root/.inputrc
	echo 'source ~/.bash_prompt' >> /home/$_USER/.bashrc
	echo '"\e[A]":history-search-backward' >> /root/.inputrc
	echo '"\e[B]":history-search-forward' >> /root/.inputrc
	echo '"\e[A]":history-search-backward' >> /home/$_USER/.inputrc
	echo '"\e[B]":history-search-forward' >> /home/$_USER/.inputrc
	echo 'source ~/.inputrc' >> /root/.bashrc
	echo 'source ~/.inputrc' >> /home/$_USER/.bashrc
	echo '. /etc/bash_completion' >> /home/$_USER/.bashrc
	echo '. /etc/bash_completion' >> /root/.bashrc
}

function setup_vim {
	dialog 'Setting up vim...'
	touch /root/.vimrc
	touch /home/$_USER/.vimrc
	mkdir /root/.vim/bundle -p
	mkdir /home/$_USER/.vim/bundle -p
}

function setup_keymaps {
	dialog 'Setting up keymaps..'
	echo '$(cat /etc/defaults/keyboard | grep XBOPTIONS)' >> /tmp/km
	echo 'XBOPTIONS="ctrl:nocaps"'
	cat /tmp/km > /etc/default/keyboard
}

function change_hostname {
	dialog 'Changing hostname to "$HOST"...'
	echo $_HOSTNAME > /etc/hostname
	sed -i 's/kali/$_HOSTNAME/g' /etc/hosts
}

function setup_temp_git {
	dialog 'Setting up temporary git user...'
	git config --global git.email "Trailer@bob.com"
	git config --global git.name "Trailer Bob"
}

function setup_ssh {
	dialog 'Generating new ssh_key for root...'
	cd ~
	dialog "Generating keypairs, You'll need to enter your password."
	ssh-keygen
}


function clean {
	warning "You've just deleted all your work." 
	# clean root
	rm -rf /root/.ssh
	rm /root/.gitconfig
	rm /root/.bashrc && touch /root/.bashrc
	rm /root/.bash_profile && touch /root/.bash_profile
	rm -rf /root/.vim*
		
	# clean user
	rm -rf /home/$_USER
	rm -rf /home/$_USER/.vim*
	chmod /root/Desktop root
	chmod /root/Downloads root
	
	# clean installs
	sudo apt-get remove -y	$PKG_LIST
	echo 'kali' > /etc/hostname
	sed -i 's/$_HOSTNAME/kali/g' /etc/hosts
}



function warning {
	echo "******************************"
	echo "******     WARNING     *******"
	echo "|| "
	echo "  $1" | awk "{print toupper($0)}"
	echo "|| "
	echo "******************************"
	echo "******************************"
}

function dialog {
	echo "*============================="
	echo "|| "
	echo "||  $1"
	echo "|| "
	echo "*============================="
}



